# Generated by Django 4.2.4 on 2023-12-06 17:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Job",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "message_id",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Internal message identifier for the work queuing system.",
                        max_length=36,
                        null=True,
                        verbose_name="Message ID",
                    ),
                ),
                (
                    "phase",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("QUEUED", "Queued"),
                            ("EXECUTING", "Executing"),
                            ("COMPLETED", "Completed"),
                            ("ERROR", "Error"),
                            ("ABORTED", "Aborted"),
                            ("UNKNOWN", "Unknown"),
                            ("HELD", "Held"),
                            ("SUSPENDED", "Suspended"),
                            ("ARCHIVED", "Archived"),
                        ],
                        default="PENDING",
                        help_text="Execution phase of the job.",
                        verbose_name="Execution Phase",
                    ),
                ),
                (
                    "run_id",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Optional opaque string provided by the client.",
                        max_length=255,
                        null=True,
                        verbose_name="Run ID",
                    ),
                ),
                (
                    "creation_time",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the job was created.", verbose_name="Creation Time"
                    ),
                ),
                (
                    "start_time",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        help_text="When the job started executing (if it has started).",
                        null=True,
                        verbose_name="Start Time",
                    ),
                ),
                (
                    "end_time",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        help_text="When the job stopped executing (if it has stopped).",
                        null=True,
                        verbose_name="End Time",
                    ),
                ),
                (
                    "destruction_time",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        help_text="Time at which the job should be destroyed.",
                        null=True,
                        verbose_name="Destruction Time",
                    ),
                ),
                (
                    "execution_duration",
                    models.DurationField(
                        blank=True,
                        default=None,
                        help_text="Allowed maximum execution duration in seconds.",
                        null=True,
                        verbose_name="Execution Duration",
                    ),
                ),
                (
                    "quote",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        help_text="Expected completion time of the job if it were started now.",
                        null=True,
                        verbose_name="Destruction Time",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="jobs",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Owner",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="JobParameter",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "parameter",
                    models.CharField(
                        help_text="Identifier of the parameter.", max_length=64, verbose_name="Parameter"
                    ),
                ),
                ("value", models.TextField(help_text="Value of the parameter.", verbose_name="Value")),
                (
                    "is_post",
                    models.BooleanField(
                        default=False, help_text="Whether the parameter was provided via POST.", verbose_name="Is Post"
                    ),
                ),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parameters",
                        to="service.job",
                        verbose_name="Job",
                    ),
                ),
            ],
            options={
                "indexes": [models.Index(fields=["job", "parameter"], name="by_parameter")],
            },
        ),
        migrations.AddIndex(
            model_name="job",
            index=models.Index(fields=["owner", "phase", "creation_time"], name="by_owner_phase"),
        ),
        migrations.AddIndex(
            model_name="job",
            index=models.Index(fields=["owner", "creation_time"], name="by_owner_time"),
        ),
    ]
